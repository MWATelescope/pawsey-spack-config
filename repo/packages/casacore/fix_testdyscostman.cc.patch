--- a/tables/Dysco/tests/testdyscostman.cc	2025-01-08 14:09:43.000000000 +0800
+++ b/tables/Dysco/tests/testdyscostman.cc	2025-01-08 14:15:12.000000000 +0800
@@ -159,24 +159,25 @@
 }
 
 BOOST_AUTO_TEST_CASE(readonly) {
-  size_t nAnt = 3;
-  TestTableFixture fixture(nAnt);
+    size_t nAnt = 3;
+    TestTableFixture fixture(nAnt);
 
-  boost::filesystem::directory_iterator end_itr;
+    // Use a modern-style range-based loop for Boost Filesystem
+    namespace bfs = boost::filesystem; // Alias for cleaner code
 
-  for (boost::filesystem::directory_iterator itr("TestTable/"); itr != end_itr;
-       ++itr) {
-    if (boost::filesystem::is_regular_file(itr->path())) {
-      boost::filesystem::permissions(
-          itr->path(),
-          boost::filesystem::others_read | boost::filesystem::owner_read);
+    for (const auto& entry : bfs::directory_iterator("TestTable/")) {
+        if (bfs::is_regular_file(entry.path())) {
+            bfs::permissions(entry.path(),
+                             bfs::others_read | bfs::owner_read);
+        }
+    }
+
+    casacore::Table table("TestTable");
+    casacore::ArrayColumn<casacore::Complex> dataCol(table, "DATA");
+
+    for (size_t i = 0; i != table.nrow(); ++i) {
+        BOOST_CHECK_CLOSE_FRACTION((*dataCol(i).cbegin()).real(), float(i), 1e-4);
     }
-  }
-  casacore::Table table("TestTable");
-  casacore::ArrayColumn<casacore::Complex> dataCol(table, "DATA");
-  for (size_t i = 0; i != table.nrow(); ++i) {
-    BOOST_CHECK_CLOSE_FRACTION((*dataCol(i).cbegin()).real(), float(i), 1e-4);
-  }
 }
 
 BOOST_AUTO_TEST_SUITE_END()
